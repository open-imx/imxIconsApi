name: Create release on push to master

on:
  pull_request:
    types: [closed]
  repository_dispatch:
    types: [release_published]

permissions:
  contents: write
  pull-requests: write

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies using Hatch
        uses: ./.github/install-dependencies/

      - name: Run linter using Hatch
        uses: ./.github/run-linter/

      - name: Run tests using Hatch
        uses: ./.github/run-tests/

      - name: Create requirements file for Azure web app
        run: |
          python create_requirements_file.py

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            release.zip
            !venv/

  release:
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true || github.event_name == 'repository_dispatch' && github.event.action == 'release_published'
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install hatch
        pip install configparser

    - name: Setup GIT
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git checkout -b version-bump-${{ github.sha }}

    - name: Bump version
      run: |
        hatch version dev

    - name: Push changes
      run: |
        git add .
        git status
        git push origin version-bump-${{ github.sha }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Pull Request
      run: |
        gh pr create --base main --head version-bump-${{ github.sha }} --title ":arrow_up: Version bump" --body "Automatic magic build version upgrade."
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Merge Pull Request
      run: |
        gh pr merge ${{ env.pr_url }} --merge
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Delete Branch
      run: |
        git push origin --delete version-bump-${{ github.sha }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Get version
      id: get_version
      run: |
        version=$(python -c 'import re; exec(open("imxIconApi/__init__.py").read()); print(__version__)')
        echo "VERSION=$version" >> $GITHUB_ENV

    - name: Get original PR details
      id: get_pr_details
      run: |
        pr_title=$(gh pr view ${{ github.event.pull_request.number }} --json title --jq '.title')
        pr_body=$(gh pr view ${{ github.event.pull_request.number }} --json body --jq '.body')
        echo "PR_TITLE=$pr_title" >> $GITHUB_ENV
        echo "PR_BODY=$pr_body" >> $GITHUB_ENV
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create release
      uses: ncipollo/release-action@v1
      with:
        name: Release ${{ env.VERSION }}
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ env.VERSION }}
        body: |
          ***${{ env.PR_TITLE }}***

          ${{ env.PR_BODY }}
        draft: false

  deploy:
    runs-on: ubuntu-latest
    needs: release
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write # This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_B93E56FF6F9A4439AD1CECC1E0A61555 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_13917EA41027436D82B5E6B18A5F1CCC }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_D9B84D3220B7430A9046FF8FD3B1A4A2 }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'imx-icons-api'
          slot-name: 'Production'
