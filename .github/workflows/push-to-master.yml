name: Create release on push to master

on:
  pull_request:
    types: [closed]
  repository_dispatch:
    types: [release_published]

permissions:
  contents: read

jobs:

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies using Hatch
        uses: ./.github/install-dependencies/

      - name: Run linter using Hatch
        uses: ./.github/run-linter/

      - name: Run tests using Hatch
        uses: ./.github/run-tests/

      - name: Create requirements file for Azure web app
        run: |
          python create_requirements_file.py

      - name: Zip artifact for deployment
        run: zip imx-icons-api-${{ github.run_number }}.zip ./* -r

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            imx-icons-api-${{ github.run_number }}.zip

  release:
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true || github.event_name == 'repository_dispatch' && github.event.action == 'release_published'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install hatch
          pip install configparser

      - name: Setup GIT
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git checkout -b version-bump-${{ github.sha }}

      - name: Bump version
        run: |
          hatch version dev

      - name: Push changes
        run: |
          git add .
          git status
          git push origin version-bump-${{ github.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge Pull Request
        run: |
          gh pr merge --repo ${{ github.repository }} ${{ github.event.pull_request.number }} --merge
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete Branch
        run: |
          git push origin --delete version-bump-${{ github.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get version
        id: get_version
        run: |
          version=$(python -c 'import re; exec(open("imxIconApi/__init__.py").read()); print(__version__)')
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          name: Release ${{ env.VERSION }}
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.VERSION }}
          draft: false

  deploy:
    runs-on: ubuntu-latest
    needs: release
    environment:
      name: 'Production'
    permissions:
      id-token: write

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip imx-icons-api-${{ github.run_number }}.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_B93E56FF6F9A4439AD1CECC1E0A61555 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_13917EA41027436D82B5E6B18A5F1CCC }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_D9B84D3220B7430A9046FF8FD3B1A4A2 }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'imx-icons-api'
          slot-name: 'Production'
